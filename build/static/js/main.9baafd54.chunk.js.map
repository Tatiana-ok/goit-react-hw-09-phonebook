{"version":3,"sources":["components/Navigation/Navigation.module.css","redux/auth/auth-selectors.js","redux/phonebook/phonebook-actions.js","redux/auth/auth-operations.js","components/AppBar/AppBar.module.css","App.module.css","redux/auth/auth-actions.js","components/UserMenu/UserMenu.js","components/Navigation/MainNavigation.js","components/Navigation/AuthNavigation.js","components/AppBar/AppBar.js","components/Routes/PrivateRoute.js","components/Routes/PublicRoute.js","App.js","redux/phonebook/phonebook-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js"],"names":["module","exports","authSelectors","getIsAuthenticated","state","auth","isAuthenticated","getUserName","user","name","getAuthError","error","getAuthLoading","loading","actions","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","updateContactRequest","updateContactSuccess","updateContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","token","headers","common","Authorization","authOperations","register","credentials","dispatch","a","authActions","registerRequest","post","response","data","registerSuccess","registerError","massage","login","loginRequest","loginSuccess","loginError","logout","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","getUserRequest","get","getUserSuccess","getUserError","message","connect","userName","onLogOut","Button","variant","type","onClick","exact","to","className","styles","link","activeClassName","activeLink","AuthNavigation","authContainer","logo","role","aria-label","AppBar","line","Component","component","redirectTo","routeProps","render","props","restricted","PhonebookView","lazy","HomeView","RegistrationView","LoginView","NotFoundView","App","this","onGetCurrentUser","container","fallback","path","items","createReducer","_","payload","find","contact","toLowerCase","includes","alert","filter","id","combineReducers","initialState","email","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","phonebookReducer","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9baafd54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__3Qkdh\"};","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nconst getAuthError = state => state.auth.error;\r\n\r\nconst getAuthLoading = state => state.auth.loading;\r\n\r\nconst authSelectors = {\r\n  getIsAuthenticated,\r\n  getUserName,\r\n  getAuthError,\r\n  getAuthLoading,\r\n};\r\n\r\nexport default authSelectors;","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst updateContactRequest = createAction('contacts/updateContactRequest');\nconst updateContactSuccess = createAction('contacts/updateContactSuccess');\nconst updateContactError = createAction('contacts/updateContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\nconst actions = { fetchContactsRequest, fetchContactsSuccess, fetchContactsError, addContactRequest, addContactSuccess, addContactError, updateContactRequest, updateContactSuccess, updateContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, changeFilter };\nexport default actions;","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n\r\n    try {\r\n        const response = await axios.post('/users/signup', credentials);\r\n        token.set(response.data.token);\r\n        dispatch(authActions.registerSuccess(response.data));\r\n    } catch (error) {\r\n        dispatch(authActions.registerError(error.massage));\r\n    }\r\n};\r\n\r\nconst login = user => async dispatch => {\r\n    dispatch(authActions.loginRequest());\r\n    try {\r\n        const response = await axios.post('/users/login', user);\r\n        token.set(response.data.token);\r\n        dispatch(authActions.loginSuccess(response.data));\r\n    } catch (error) {\r\n        dispatch(authActions.loginError(error.massage));\r\n    }\r\n};\r\n\r\nconst logout = () => async dispatch => {\r\n    dispatch(authActions.logoutRequest());\r\n    try {\r\n        await axios.post('/users/logout');\r\n        token.unset();\r\n        dispatch(authActions.logoutSuccess());\r\n    } catch (error) {\r\n        dispatch(authActions.logoutError(error.massage));\r\n    }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n    const {\r\n        auth: { token: persistedToken },\r\n    } = getState();\r\n    if (!persistedToken) {\r\n        return;\r\n    }\r\n    token.set(persistedToken);\r\n    dispatch(authActions.getUserRequest());\r\n    try {\r\n        const response = await axios.get('/users/current');\r\n        dispatch(authActions.getUserSuccess(response.data))\r\n    } catch (error) {\r\n        dispatch(authActions.getUserError(error.message))\r\n    }\r\n}\r\n\r\nconst authOperations = { register, login, logout, getCurrentUser};\r\nexport default authOperations;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppBar\":\"AppBar_AppBar__1VbF-\",\"line\":\"AppBar_line__YaQur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__zH-66\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getUserRequest = createAction('auth/getUserRequest');\r\nconst getUserSuccess = createAction('auth/getUserSuccess');\r\nconst getUserError = createAction('auth/getUserError');\r\n\r\nconst authActions = {registerRequest, registerSuccess, registerError, loginRequest, loginSuccess, loginError, logoutRequest, logoutSuccess, logoutError, getUserRequest, getUserSuccess, getUserError}\r\nexport default authActions;\r\n","import s from './UserMenu.module.css';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport authOperations from '../../redux/auth/auth-operations';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst UserMenu = ({ userName, onLogOut }) => {\r\n    return (\r\n        <>\r\n            <p>Добро пожаловать, {userName}</p>\r\n            <Button variant=\"primary\" type=\"button\" onClick={onLogOut}>Выйти</Button>\r\n        </>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    userName: authSelectors.getUserName(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onLogOut: () => dispatch(authOperations.logout())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport styles from './Navigation.module.css';\r\n\r\nconst MainNavigation = ({isAuthenticated}) => (\r\n  <div>\r\n    <nav>\r\n      <NavLink\r\n        exact\r\n        to=\"/\"\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Главная\r\n      </NavLink>\r\n\r\n      {isAuthenticated && <NavLink\r\n        to=\"/contacts\"\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Телефонная книга\r\n      </NavLink>}\r\n      \r\n    </nav>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(MainNavigation);","import { NavLink } from 'react-router-dom';\r\nimport styles from './Navigation.module.css';\r\n\r\nconst AuthNavigation = () => (\r\n  <div className={styles.authContainer}>\r\n    <nav>\r\n      <NavLink\r\n        to=\"/register\"\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n          Регистрация\r\n      </NavLink>\r\n          <NavLink\r\n        to=\"/login\"\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Вход\r\n      </NavLink>\r\n    </nav>\r\n  </div>\r\n);\r\n\r\nexport default AuthNavigation;","import UserMenu from '../UserMenu/UserMenu';\r\nimport MainNavigation from '../Navigation/MainNavigation';\r\nimport AuthNavigation from '../Navigation/AuthNavigation';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport { connect } from 'react-redux';\r\nimport styles from './AppBar.module.css';\r\n\r\nconst AppBar = ({ isAuthenticated }) => {\r\n    return (\r\n        <header>\r\n            <span className={styles.logo} role=\"icon\" aria-label=\"logo\"></span>\r\n            <div className={styles.AppBar}>\r\n                <MainNavigation />\r\n                {isAuthenticated ? <UserMenu /> : <AuthNavigation />}\r\n            </div>\r\n            <hr className={styles.line} />\r\n        </header>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n\r\n\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nconst PrivateRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    redirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route {...routeProps} render={\r\n        props => isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    } />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nconst PublicRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    redirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route {...routeProps} render={\r\n        props => isAuthenticated && routeProps.restricted ? (<Redirect to={redirectTo} />) : (<Component {...props}/>)\r\n    } />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);","import './App.css';\nimport s from './App.module.css';\nimport { Component, Suspense, lazy } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\nimport AppBar from './components/AppBar/AppBar';\nimport PrivateRoute from './components/Routes/PrivateRoute';\nimport PublicRoute from './components/Routes/PublicRoute';\nimport authOperations from './redux/auth/auth-operations';\nimport styles from './App.module.css';\n\nconst PhonebookView = lazy(() => import('./views/PhonebookView'));\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegistrationView = lazy(() => import('./views/RegistrationView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst NotFoundView = lazy(() => import('./views/NotFoundView'));\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.onGetCurrentUser();\n    }\n    render() {\n        return(\n        <div className={styles.container}>\n            <AppBar />\n            <Suspense fallback={<p>Загружаем...</p>}>\n                <Switch>\n                    <PublicRoute exact path=\"/\" component={HomeView} />\n                    <PublicRoute path=\"/register\" restricted redirectTo=\"/\" component={RegistrationView} />\n                    <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\" component={LoginView} />\n                    <PrivateRoute path=\"/contacts\" redirectTo=\"/login\" component={PhonebookView}/>\n                    <PublicRoute component={NotFoundView} />\n                </Switch>\n            </Suspense>\n        </div>\n        )\n    }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onGetCurrentUser: () => dispatch(authOperations.getCurrentUser()),\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n// export default App;\n\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport actions from './phonebook-actions';\n\nconst items = createReducer([], {\n  [actions.fetchContactsSuccess]: (_, {payload}) => payload,\n  [actions.addContactSuccess]: (state, { payload }) => {\n    if (\n      state.find(contact =>\n        contact.name.toLowerCase().includes(payload.name.toLowerCase()),\n      )\n    ) {\n      alert(`${payload.name} is already in contacts`);\n    } else {\n      return [payload, ...state];\n    }\n  },\n  // [actions.updateContactSuccess]: (state, { payload }) => {\n  //   return [payload, ...state];\n  // },\n  [actions.deleteContactSuccess]: (state, { payload }) => {\n    return state.filter(contact => payload !== contact.id);\n  },\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n  [actions.deleteContactSuccess]: (state, { payload }) => '',\n});\n\nconst error = createReducer('', {\n  [actions.fetchContactsError]: (state, { payload }) => payload,\n  [actions.addContactError]: (state, { payload }) => payload,\n  [actions.deleteContactError]: (state, { payload }) => payload,\n})\n\nexport default combineReducers({\n  items,\n  filter,\n  error\n});\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialState = { name: \"\", email: \"\" };\r\n\r\nconst user = createReducer(initialState, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.logoutSuccess]: () => initialState,\r\n    [authActions.getUserSuccess]: (_, {payload}) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.logoutSuccess]: () => null\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: (_, { payload }) => payload,\r\n    [authActions.loginError]: (_, { payload }) => payload,\r\n    [authActions.logoutError]: (_, { payload }) => payload,\r\n    [authActions.getUserError]: (_, { payload }) => payload\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n    [authActions.registerSuccess]: () => true,\r\n    [authActions.loginSuccess]: () => true,\r\n    [authActions.getUserSuccess]: () => true,\r\n    [authActions.registerError]: () => false,\r\n    [authActions.loginError]: () => false,\r\n    [authActions.getUserError]: () => false,\r\n    [authActions.logoutSuccess]: () => false\r\n});\r\n\r\nexport default combineReducers({\r\n    user,\r\n    isAuthenticated,\r\n    token,\r\n    error\r\n});\r\n","import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './phonebook/phonebook-reducer';\nimport authReducer from './auth/auth-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'token',\n  storage,\n  whitelist: ['token']\n}\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: phonebookReducer,\n  },\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}